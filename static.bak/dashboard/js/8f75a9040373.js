(function(){'use strict';angular.module('horizon.dashboard.project.workflow.launch-instance',[]).config(config).constant('horizon.dashboard.project.workflow.launch-instance.modal-spec',{backdrop:'static',size:'lg',controller:'ModalContainerController',template:'<wizard class="wizard" ng-controller="LaunchInstanceWizardController"></wizard>'}).constant('horizon.dashboard.project.workflow.launch-instance.boot-source-types',{IMAGE:'image',INSTANCE_SNAPSHOT:'snapshot',VOLUME:'volume',VOLUME_SNAPSHOT:'volume_snapshot',NON_BOOTABLE_IMAGE_TYPES:['aki','ari']}).constant('horizon.dashboard.project.workflow.launch-instance.non_bootable_image_types',['aki','ari']).constant('horizon.dashboard.project.workflow.launch-instance.step-policy',{schedulerHints:{rules:[['compute','os_compute_api:os-scheduler-hints:discoverable']]},serverGroups:{rules:[['compute','os_compute_api:os-server-groups:discoverable']]}}).filter('diskFormat',diskFormat);config.$inject=['$provide','$windowProvider'];function config($provide,$windowProvider){var path=$windowProvider.$get().STATIC_URL+'dashboard/project/workflow/launch-instance/';$provide.constant('horizon.dashboard.project.workflow.launch-instance.basePath',path);}
function diskFormat(){return filter;function filter(input){if(input===null||!angular.isObject(input)||angular.isUndefined(input.disk_format)||input.disk_format===null){return'';}else{var diskFormat=input.disk_format;var containerFormat=input.container_format;return containerFormat==='docker'&&diskFormat==='raw'?'docker':diskFormat;}}}})();