(function(){'use strict';angular.module('horizon.framework.widgets.modal').factory('horizon.framework.widgets.modal.deleteModalService',deleteModalService);deleteModalService.$inject=['$q','horizon.framework.widgets.modal.simple-modal.service','horizon.framework.widgets.toast.service','horizon.framework.util.q.extensions'];function deleteModalService($q,simpleModalService,toast,$qExtensions){var service={open:open};return service;function open(scope,entities,context){var options={title:context.labels.title,body:interpolate(context.labels.message,[entities.map(getName).join("\", \"")]),submit:context.labels.submit};return simpleModalService.modal(options).result.then(onModalSubmit);function onModalSubmit(){return $qExtensions.allSettled(entities.map(deleteEntityPromise)).then(notify);}
function deleteEntityPromise(entity){return{promise:context.deleteEntity(entity.id),context:entity};}
function notify(result){if(result.pass.length>0){var passEntities=result.pass.map(getEntities);scope.$emit(context.successEvent,passEntities.map(getId));toast.add('success',getMessage(context.labels.success,passEntities));}
if(result.fail.length>0){var failEntities=result.fail.map(getEntities);scope.$emit(context.failedEvent,failEntities.map(getId));toast.add('error',getMessage(context.labels.error,failEntities));}
return result;}}
function getEntities(passResponse){return passResponse.context;}
function getMessage(message,entities){return interpolate(message,[entities.map(getName).join(", ")]);}
function getName(entity){return entity.name||entity.id;}
function getId(entity){return entity.id;}}})();