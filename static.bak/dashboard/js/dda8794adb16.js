(function(){'use strict';angular.module('horizon.app.core.images').factory('horizon.app.core.images.actions.create-volume.service',createVolumeService);createVolumeService.$inject=['$q','horizon.app.core.openstack-service-api.cinder','horizon.app.core.openstack-service-api.policy','horizon.app.core.openstack-service-api.serviceCatalog','horizon.app.core.images.events','horizon.app.core.images.non_bootable_image_types','horizon.app.core.images.workflows.create-volume.service','horizon.framework.util.actions.action-result.service','horizon.framework.util.q.extensions','horizon.framework.widgets.modal.wizard-modal.service','horizon.framework.widgets.toast.service','horizon.app.core.volumes.resourceType'];function createVolumeService($q,cinder,policy,serviceCatalog,events,nonBootableImageTypes,createVolumeWorkflowService,actionResultService,$qExtensions,wizardModalService,toast,volumeResourceType){var createVolumePromise,volumeServiceEnabledPromise;var message={success:gettext('Volume %s was successfully created.')};var service={initAction:initAction,allowed:allowed,perform:perform};return service;function initAction(){createVolumePromise=policy.ifAllowed({rules:[['volume','volume:create']]});if(serviceCatalog.ifTypeEnabled('volumev2')||serviceCatalog.ifTypeEnabled('volumev3')){volumeServiceEnabledPromise=true;}else{volumeServiceEnabledPromise=false;}}
function allowed(image){return $q.all([imageBootable(image),createVolumePromise,volumeServiceEnabledPromise,imageActive(image)]);}
function perform(image){return wizardModalService.modal({data:{image:image},workflow:createVolumeWorkflowService,submit:submit}).result;}
function submit(stepModels){return cinder.createVolume(stepModels.volumeForm).then(showSuccessMessage);}
function showSuccessMessage(response){var volume=response.data;toast.add('success',interpolate(message.success,[volume.name]));return actionResultService.getActionResult().created(volumeResourceType,volume.id).result;}
function imageBootable(image){return $qExtensions.booleanAsPromise(nonBootableImageTypes.indexOf(image.container_format)<0);}
function imageActive(image){return $qExtensions.booleanAsPromise(image.status==='active');}}})();