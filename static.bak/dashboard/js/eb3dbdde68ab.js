(function(){'use strict';angular.module('horizon.framework.conf').service('horizon.framework.conf.permissions.service',Permissions);Permissions.$inject=['$q'];function Permissions($q){var service={checkAllowed:checkAllowed,checkAll:checkAll,extendedPermissions:extendedPermissions};return service;function checkAllowed(configItem){if(angular.isFunction(configItem.allowed)){return configItem.allowed();}else{return $q.when(true);}}
function checkAll(configItem){var promises=[];promises=promises.concat(getConfigurationPromises(configItem));promises.push(checkAllowed(configItem));return $q.all(promises);}
function extendedPermissions(){return{};}
function getConfigurationPromises(configItem){var promises=[];angular.forEach(service.extendedPermissions,checkPermissions);function checkPermissions(permissionResolver,permissionName){var permissionInput=configItem[permissionName];if(angular.isArray(permissionInput)){angular.forEach(permissionInput,function addPermissionCheck(singlePermissionInput){promises.push(permissionResolver(singlePermissionInput));});}else if(angular.isDefined(permissionInput)){promises.push(permissionResolver(permissionInput));}}
return promises;}}})();