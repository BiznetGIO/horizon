(function(){'use strict';angular.module('horizon.app.core.images').filter('imageVisibility',imageVisibilityFilter);imageVisibilityFilter.$inject=['horizon.framework.util.i18n.gettext'];function imageVisibilityFilter(gettext){var imageVisibility={'public':gettext('Public'),'private':gettext('Private'),'shared':gettext('Shared'),'community':gettext('Community'),'other':null,'unknown':gettext('Unknown')};return function getVisibility(image,currentProjectId){imageVisibility.other=gettext('Image from Other Project - Non-Public');if(null!==image&&angular.isDefined(image)){if(image.apiVersion<2){imageVisibility.other=gettext('Shared with Project');}
return evaluateImageProperties(image,currentProjectId);}else{return imageVisibility.unknown;}};function evaluateImageProperties(image,currentProjectId){var translatedVisibility;if(angular.isDefined(image.visibility)){translatedVisibility=safeTranslateVisibility(image.visibility);}else if(angular.isDefined(image.is_public)){translatedVisibility=translateIsPublic(image.is_public);}else{translatedVisibility=imageVisibility.unknown;}
return deriveSharingStatus(image,currentProjectId,translatedVisibility);}
function safeTranslateVisibility(visibility){var translation=imageVisibility[visibility];if(angular.isDefined(translation)){return translation;}else{return visibility;}}
function translateIsPublic(isPublic){if(isPublic){return imageVisibility.public;}else{return imageVisibility.private;}}
function deriveSharingStatus(image,currentProjectId,translatedVisibility){if(angular.equals(translatedVisibility,imageVisibility.public)){return translatedVisibility;}else if(angular.isDefined(currentProjectId)&&!angular.equals(image.owner,currentProjectId)){return imageVisibility.other;}else{return translatedVisibility;}}}}());