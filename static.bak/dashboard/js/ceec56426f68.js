(function(){'use strict';angular.module('horizon.framework.widgets.magic-search').directive('hzMagicSearchContext',hzMagicSearchContext);hzMagicSearchContext.$inject=['$parse','horizon.framework.widgets.magic-search.events'];function hzMagicSearchContext($parse,magicSearchEvents){var directive={link:link,restrict:'E',scope:true};return directive;function link(scope,element,attrs){var filterStrings=$parse(attrs.filterStrings)(scope);var clientFullTextSearch=$parse(attrs.clientFullTextSearch)(scope);var searchSettingsCallback=$parse(attrs.searchSettingsCallback)(scope);scope.searchSettingsCallback=searchSettingsCallback;scope.clientFullTextSearch=angular.isDefined(clientFullTextSearch)?clientFullTextSearch:true;var defaultFilterStrings={cancel:gettext('Cancel'),prompt:gettext('Click here for filters.'),remove:gettext('Remove'),text:scope.clientFullTextSearch?gettext('Search in current results'):gettext('Full Text Search')};scope.filterStrings=filterStrings||defaultFilterStrings;if(angular.isDefined(searchSettingsCallback)){scope.showSettings=true;}else{scope.showSettings=false;}
scope.$on(magicSearchEvents.SEARCH_UPDATED,resend);scope.$on(magicSearchEvents.TEXT_SEARCH,resend);scope.$on(magicSearchEvents.CHECK_FACETS,resend);scope.$on(magicSearchEvents.FACETS_CHANGED,resend);scope.$on(magicSearchEvents.SERVER_SEARCH_UPDATED,resend);if(angular.isUndefined(scope.filterFacets)){scope.$watch(attrs.filterFacets,function(newValue){scope.filterFacets=newValue;});}
function resend(event,data){scope.$broadcast(event.name+'-ms-context',data);}}}})();