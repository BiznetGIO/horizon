(function(){'use strict';angular.module('horizon.framework.widgets.table').controller('horizon.framework.widgets.table.ResourceTableController',controller);controller.$inject=['$q','$scope','horizon.framework.widgets.table.events','horizon.framework.widgets.magic-search.events','horizon.framework.widgets.magic-search.service','horizon.framework.util.actions.action-result.service','horizon.framework.conf.resource-type-registry.service'];function controller($q,$scope,hzTableEvents,magicSearchEvents,searchService,actionResultService,registry){var ctrl=this;var lastSearchQuery={};ctrl.actionResultHandler=actionResultHandler;ctrl.searchFacets=[];ctrl.config={};ctrl.batchActions=[];ctrl.items=[];ctrl.itemsSrc=[];ctrl.itemInTransitionFunction=itemInTransitionFunction;$scope.$on(magicSearchEvents.SERVER_SEARCH_UPDATED,handleServerSearch);$scope.$watch("ctrl.resourceTypeName",onResourceTypeNameChange);$scope.$watch("ctrl.listFunctionExtraParams",onListFunctionExtraParamsChange);function onResourceTypeNameChange(newValue){if(angular.isDefined(newValue)){ctrl.resourceType=registry.getResourceType(newValue);ctrl.resourceType.initActions($scope);ctrl.searchFacets=ctrl.resourceType.filterFacets;ctrl.config={detailsTemplateUrl:ctrl.resourceType.summaryTemplateUrl,selectAll:!!ctrl.resourceType.batchActions.length,expand:ctrl.resourceType.summaryTemplateUrl,trackId:ctrl.trackBy||'id',columns:ctrl.resourceType.getTableColumns()};ctrl.batchActions=ctrl.resourceType.globalActions.concat(ctrl.resourceType.batchActions);checkForFilterFirstAndListResources();}}
function onListFunctionExtraParamsChange(newValue){if(angular.isDefined(newValue)){checkForFilterFirstAndListResources();}}
function checkForFilterFirstAndListResources(){if(ctrl.resourceType){ctrl.resourceType.needsFilterFirstFunction().then(resolve);}
function resolve(result){ctrl.config.needsFilterFirst=false;if(result){if(checkForFiltersInSearchQuery()){listResources();}
else{ctrl.config.needsFilterFirst=true;ctrl.itemsSrc=[];}}
else{listResources();}}
function checkForFiltersInSearchQuery(){var filters=ctrl.searchFacets.filter(function(facet){var queryParams=Object.keys(lastSearchQuery);return queryParams.indexOf(facet.name)>-1;});return filters.length>0;}}
function listResources(){if(ctrl.resourceType){ctrl.resourceType.list(angular.extend({},lastSearchQuery,ctrl.listFunctionExtraParams)).then(onLoad);}}
function handleServerSearch(evt,magicSearchQueryObj){lastSearchQuery=searchService.getSearchTermsFromQueryString(magicSearchQueryObj.magicSearchQuery).reduce(queryToObject,{});checkForFilterFirstAndListResources();function queryToObject(orig,curr){var fields=searchService.getSearchTermObject(curr);orig[fields.type]=fields.value;return orig;}}
function onLoad(response){ctrl.itemsSrc=response.data.items;}
function actionResultHandler(returnValue){return $q.when(returnValue,actionSuccessHandler);}
function actionSuccessHandler(result){var deletedIds,updatedIds,createdIds,failedIds;if(result){deletedIds=actionResultService.getIdsOfType(result.deleted,ctrl.resourceType.type);updatedIds=actionResultService.getIdsOfType(result.updated,ctrl.resourceType.type);createdIds=actionResultService.getIdsOfType(result.created,ctrl.resourceType.type);failedIds=actionResultService.getIdsOfType(result.failed,ctrl.resourceType.type);if(deletedIds.length){ctrl.itemsSrc=difference(ctrl.itemsSrc,deletedIds,'id');$scope.$broadcast(hzTableEvents.CLEAR_SELECTIONS);}
if(updatedIds.length||createdIds.length){checkForFilterFirstAndListResources();}
if(failedIds.length){}}else{checkForFilterFirstAndListResources();}}
function difference(currentList,otherList,key){return currentList.filter(filter);function filter(elem){return otherList.filter(function filterDeletedItem(deletedItem){return deletedItem===elem[key];}).length===0;}}
function itemInTransitionFunction(item){return ctrl.resourceType.itemInTransitionFunction(item);}}})();