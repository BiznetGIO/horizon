(function(){'use strict';angular.module('horizon.framework.util.promise-toggle').directive('hzPromiseToggleTemplate',hzPromiseToggleTemplate);hzPromiseToggleTemplate.$inject=['$q','$parse'];function hzPromiseToggleTemplate($q,$parse){var directive={name:null,singlePromiseResolver:null,transclude:'element',priority:2000,terminal:true,restrict:'A',compile:compile,$$tlb:true};return directive;function compile(element,attrs,linker){var input=$parse(attrs[this.name]);var singlePromiseResolver=this.singlePromiseResolver;return resolvePromises;function resolvePromises(scope,iterStartElement){var resolvedInput=input(scope);var promiseResolver=angular.isArray(resolvedInput)?multiPromiseResolver(singlePromiseResolver,resolvedInput):singlePromiseResolver(resolvedInput);promiseResolver.then(linkContent,removeContent);function linkContent(){linker(scope,function(clone){iterStartElement.after(clone);});}
function removeContent(){element.remove();}
function multiPromiseResolver(resolver,arrayInput){return $q.all(arrayInput.map(function(singleInput){return resolver(singleInput);}));}}}}})();