(function(){'use strict';angular.module('horizon.dashboard.project.workflow.launch-instance').controller('LaunchInstanceKeypairController',LaunchInstanceKeypairController);LaunchInstanceKeypairController.$inject=['horizon.dashboard.project.workflow.launch-instance.basePath','launchInstanceModel','$uibModal','horizon.framework.widgets.toast.service','horizon.app.core.openstack-service-api.settings'];function LaunchInstanceKeypairController(basePath,launchInstanceModel,$uibModal,toastService,settingsService){var ctrl=this;ctrl.isKeypairCreated=false;ctrl.createdKeypair={name:"",regenerateUrl:""};ctrl.allocateNewKeyPair=allocateNewKeyPair;ctrl.createKeyPair=createKeyPair;ctrl.importKeyPair=importKeyPair;ctrl.setKeypairRequired=setKeypairRequired;ctrl.tableData={available:launchInstanceModel.keypairs,allocated:launchInstanceModel.newInstanceSpec.key_pair};ctrl.availableTableConfig={selectAll:false,trackId:'id',detailsTemplateUrl:basePath+'keypair/keypair-details.html',columns:[{id:'name',title:gettext('Name'),priority:1},{id:'fingerprint',title:gettext('Fingerprint'),priority:2}]};ctrl.allocatedTableConfig=angular.copy(ctrl.availableTableConfig);ctrl.allocatedTableConfig.noItemsMessage=gettext('Select a key pair from the available key pairs below.');ctrl.filterFacets=[{label:gettext('Name'),name:'name',singleton:true},{label:gettext('Fingerprint'),name:'fingerprint',singleton:true}];ctrl.tableLimits={maxAllocation:1};ctrl.isKeypairRequired=0;settingsService.getSetting('OPENSTACK_HYPERVISOR_FEATURES.requires_keypair').then(setKeypairRequired);function allocateNewKeyPair(newKeyPair){if(ctrl.tableData.allocated.length===0){ctrl.tableData.allocated.push(newKeyPair);}}
function createKeyPair(){$uibModal.open({templateUrl:basePath+'keypair/create-keypair.html',controller:'LaunchInstanceCreateKeyPairController as ctrl',windowClass:'modal-dialog-wizard',resolve:{existingKeypairs:getKeypairs}}).result.then(notifyUserAndAssign);}
function notifyUserAndAssign(newKeypair){toastService.add('success',interpolate(gettext('Created keypair: %s'),[newKeypair.name]));assignKeypair(newKeypair);ctrl.createdKeypair=newKeypair;ctrl.isKeypairCreated=true;}
function importKeyPair(){$uibModal.open({templateUrl:basePath+'keypair/import-keypair.html',controller:'LaunchInstanceImportKeyPairController as ctrl',windowClass:'modal-dialog-wizard'}).result.then(assignKeypair);}
function assignKeypair(keypair){keypair.id=keypair.name;launchInstanceModel.keypairs.push(keypair);ctrl.allocateNewKeyPair(keypair);}
function getKeypairs(){return launchInstanceModel.keypairs.map(getName);}
function getName(item){return item.name;}
function setKeypairRequired(setting){ctrl.isKeypairRequired=setting?1:0;}}})();