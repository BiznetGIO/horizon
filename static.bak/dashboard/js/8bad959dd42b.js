angular.module('horizon.app').run(['$templateCache',function($templateCache){$templateCache.put("/static/dashboard/project/workflow/launch-instance/source/source.html","<div ng-controller=\"LaunchInstanceSourceController as ctrl\">\n  <div ng-show=\"model.allowedBootSources.length > 0\">\n  <p class=\"step-description\" translate>\n    Instance source is the template used to create an instance.\n    You can use an image, a snapshot of an instance (image snapshot),\n    a volume or a volume snapshot (if enabled).\n    You can also choose to use persistent storage by creating a new volume.\n  </p>\n\n  <div class=\"row\">\n    <div class=\"col-xs-6\">\n      <div class=\"form-group\" ng-class=\"{ \'has-error\': launchInstanceSourceForm.boot-source-type.$invalid }\">\n        <label for=\"boot-source-type\" class=\"control-label\" translate>Select Boot Source</label>\n        <select name=\"boot-source-type\" class=\"form-control\" id=\"boot-source-type\"\n                ng-options=\"src.label for src in model.allowedBootSources| orderBy:\'label\' track by src.type\"\n                ng-change=\"ctrl.updateBootSourceSelection(model.newInstanceSpec.source_type.type)\"\n                ng-model=\"model.newInstanceSpec.source_type\">\n        </select>\n        <span class=\"help-block\" ng-show=\"launchInstanceSourceForm.boot-source-type.$invalid\">\n          {$ ctrl.bootSourceTypeError $}\n        </span>\n      </div>\n    </div>\n\n    <div ng-if=\"(model.newInstanceSpec.source_type.type === \'image\' ||\n                 model.newInstanceSpec.source_type.type === \'snapshot\') &&\n                model.allowCreateVolumeFromImage\">\n      <div class=\"col-xs-6\">\n        <div class=\"form-group\">\n          <label for=\"vol-create\" translate>Create New Volume</label><br/>\n          <div class=\"btn-group\">\n            <label class=\"btn btn-default\" id=\"vol-create\"\n                   ng-repeat=\"option in ctrl.toggleButtonOptions\"\n                   ng-model=\"model.newInstanceSpec.vol_create\"\n                   uib-btn-radio=\"option.value\">{$ ::option.label $}</label>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div ng-if=\"model.newInstanceSpec.source_type.type == \'volume\' || model.newInstanceSpec.source_type.type == \'volume_snapshot\'\">\n      <div class=\"col-xs-6\">\n        <div class=\"form-group\">\n          <label translate>Delete Volume on Instance Delete</label><br/>\n          <div class=\"btn-group\">\n            <label class=\"btn btn-default\"\n                   ng-repeat=\"option in ctrl.toggleButtonOptions\"\n                   ng-model=\"model.newInstanceSpec.vol_delete_on_instance_delete\"\n                   uib-btn-radio=\"option.value\">{$ ::option.label $}</label>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-xs-6\">\n      <div ng-if=\"model.newInstanceSpec.vol_create == true\">\n        <div class=\"form-group\"\n             ng-class=\"{ \'has-error\': launchInstanceSourceForm[\'volume-size\'].$invalid }\">\n          <label for=\"volume-size\" class=\"control-label\">\n            <translate>Volume Size (GB)</translate>\n            <span class=\"hz-icon-required fa fa-asterisk\"></span>\n          </label>\n          <input name=\"volume-size\"\n                 min=\"{$ ctrl.minVolumeSize $}\"\n                 id=\"volume-size\"\n                 type=\"number\"\n                 class=\"form-control\"\n                 ng-model=\"model.newInstanceSpec.vol_size\"\n                 ng-pattern=\"/^[0-9]+$/\"\n                 ng-required=\"true\">\n          <span class=\"help-block\"\n                ng-show=\"launchInstanceSourceForm[\'volume-size\'].$invalid\">\n            {$ launchInstanceSourceForm[\'volume-size\'].$error.validateNumberMin ? ctrl.minVolumeSizeError : ctrl.volumeSizeError $}\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-xs-6\">\n      <div ng-if=\"model.newInstanceSpec.vol_create == true\">\n        <div class=\"form-group\">\n          <label translate class=\"control-label\">Delete Volume on Instance Delete</label><br/>\n          <div class=\"btn-group\">\n            <label class=\"btn btn-default\"\n                   ng-repeat=\"option in ctrl.toggleButtonOptions\"\n                   ng-model=\"model.newInstanceSpec.vol_delete_on_instance_delete\"\n                   uib-btn-radio=\"option.value\">{$ ::option.label $}</label>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div hz-if-settings=\'[\"OPENSTACK_HYPERVISOR_FEATURES.can_set_mount_point\"]\'\n    ng-if=\"model.newInstanceSpec.vol_create === true\">\n        <label translate>Device Name</label>\n        <input class=\"form-control\"\n               ng-model=\"model.newInstanceSpec.vol_device_name\"\n               type=\"text\">\n  </div>\n\n  <transfer-table help-text=\"ctrl.helpText\"\n                  tr-model=\"ctrl.tableData\">\n    <allocated validate-number-min=\"1\"\n               ng-model=\"ctrl.tableData.allocated.length\">\n      <table class=\"table table-striped table-rsp table-detail modern\"\n             hz-table\n             st-safe-src=\"ctrl.tableData.allocated\"\n             st-table=\"ctrl.tableData.displayAllocated\">\n        <!-- transfer table, allocated table head -->\n        <thead>\n          <tr>\n            <th class=\"expander\"></th>\n            <th ng-class=\"ctrl.tableHeadCells[0].classList\">\n              {$ ctrl.tableHeadCells[0].text $}\n            </th>\n            <th ng-class=\"ctrl.tableHeadCells[1].classList\">\n              {$ ctrl.tableHeadCells[1].text $}\n            </th>\n            <th ng-class=\"ctrl.tableHeadCells[2].classList\">\n              {$ ctrl.tableHeadCells[2].text $}\n            </th>\n            <th ng-class=\"ctrl.tableHeadCells[3].classList\">\n              {$ ctrl.tableHeadCells[3].text $}\n            </th>\n            <th ng-class=\"ctrl.tableHeadCells[4].classList\">\n              {$ ctrl.tableHeadCells[4].text $}\n            </th>\n            <th class=\"action\"></th>\n          </tr>\n        </thead><!-- /transfer table, allocated table head -->\n\n        <!-- transfer table, allocated table body -->\n        <tbody>\n\n          <tr ng-if=\"ctrl.tableData.allocated.length === 0\">\n            <td colspan=\"{$ ctrl.tableHeadCells.length + 2 $}\">\n              <div class=\"no-rows-help\">\n                {$ ::trCtrl.helpText.noneAllocText $}\n                </div>\n            </td>\n          </tr>\n\n          <tr ng-repeat-start=\"row in ctrl.selection\">\n            <td class=\"expander\">\n              <span class=\"fa fa-chevron-right\"\n                    hz-expand-detail\n                    title=\"{$ ::trCtrl.helpText.expandDetailsText $}\"></span>\n            </td>\n            <td ng-class=\"ctrl.tableBodyCells[0].classList\">\n              {$ ctrl.tableBodyCells[0].filter ? ctrl.tableBodyCells[0].filter(row[ctrl.tableBodyCells[0].key], ctrl.tableBodyCells[0].filterArg) : row[ctrl.tableBodyCells[0].key] $}\n            </td>\n            <td ng-class=\"ctrl.tableBodyCells[1].classList\">\n              {$ ctrl.tableBodyCells[1].filter ? ctrl.tableBodyCells[1].filter(row[ctrl.tableBodyCells[1].key], ctrl.tableBodyCells[1].filterArg) : row[ctrl.tableBodyCells[1].key] $}\n            </td>\n            <td ng-class=\"ctrl.tableBodyCells[2].classList\">\n              {$ ctrl.tableBodyCells[2].filter ? ctrl.tableBodyCells[2].filter(row[ctrl.tableBodyCells[2].key], ctrl.tableBodyCells[2].filterArg) : row[ctrl.tableBodyCells[2].key] $}\n            </td>\n            <td ng-class=\"ctrl.tableBodyCells[3].classList\">\n              {$ ctrl.tableBodyCells[3].filter ? ctrl.tableBodyCells[3].filter(ctrl.tableBodyCells[3].filterRawData ? row : row[ctrl.tableBodyCells[3].key], ctrl.tableBodyCells[3].filterArg) : row[ctrl.tableBodyCells[3].key] $}\n            </td>\n            <td ng-class=\"ctrl.tableBodyCells[4].classList\">\n              <span ng-if=\"model.newInstanceSpec.source_type.type === \'volume\' && row.availability_zone !== model.newInstanceSpec.availability_zone\"\n                    class=\"invalid fa fa-exclamation-triangle\"\n                    popover=\"{$ ::trCtrl.helpText.volumeAZHelpText $}\"\n                    popover-trigger=\"mouseenter mouseleave\"\n                    popover-append-to-body=\"true\"\n                    popover-placement=\"top\"></span>\n              {$ ctrl.tableBodyCells[4].filter ? ctrl.tableBodyCells[4].filter(row[ctrl.tableBodyCells[4].key], ctrl.tableBodyCells[4].filterArg) : row[ctrl.tableBodyCells[4].key] $}\n            </td>\n            <td class=\"actions_column\">\n              <action-list>\n                <action action-classes=\"\'btn btn-default\'\"\n                        callback=\"trCtrl.deallocate\"\n                        item=\"row\">\n                  <span class=\"fa fa-arrow-down\"></span>\n                </action>\n              </action-list>\n            </td>\n          </tr>\n          <tr class=\"detail-row\"\n              ng-repeat-end\n              ng-include=\"ctrl.sourceDetails\">\n          </tr>\n        </tbody>\n      </table>\n    </allocated>\n\n    <available>\n      <hz-magic-search-context filter-facets=\"ctrl.sourceFacets\">\n        <hz-magic-search-bar>\n        </hz-magic-search-bar>\n        <table st-table=\"ctrl.tableData.displayedAvailable\"\n               st-safe-src=\"ctrl.tableData.available\"\n               hz-table\n               st-magic-search\n               class=\"table table-striped table-rsp table-detail modern\">\n\n          <!-- transfer table, available table head -->\n          <thead>\n            <tr>\n              <th class=\"expander\"></th>\n              <th st-sort=\"ctrl.sortByField[0]\">\n                {$ ctrl.tableHeadCells[0].text $}\n              </th>\n              <th st-sort=\"ctrl.sortByField[1]\">\n                {$ ctrl.tableHeadCells[1].text $}\n              </th>\n              <th st-sort=\"ctrl.sortByField[2]\">\n                {$ ctrl.tableHeadCells[2].text $}\n              </th>\n              <th st-sort=\"ctrl.sortByField[3]\">\n                {$ ctrl.tableHeadCells[3].text $}\n              </th>\n              <th st-sort=\"ctrl.sortByField[4]\">\n                {$ ctrl.tableHeadCells[4].text $}\n              </th>\n              <th class=\"action\" translate></th>\n            </tr>\n          </thead>\n          <tbody>\n\n            <tr ng-if=\"trCtrl.numAvailable() === 0\">\n              <td colspan=\"{$ ctrl.tableHeadCells.length + 2 $}\">\n                <div class=\"no-rows-help\">\n                  {$ ::trCtrl.helpText.noneAvailText $}\n                </div>\n              </td>\n            </tr>\n\n            <tr ng-repeat-start=\"row in ctrl.tableData.displayedAvailable track by row.id\"\n                ng-if=\"!trCtrl.allocatedIds[row.id]\">\n              <td class=\"expander\">\n                <span class=\"fa fa-chevron-right\"\n                      hz-expand-detail\n                      title=\"{$ ::trCtrl.helpText.expandDetailsText $}\">\n                </span>\n              </td>\n              <td ng-class=\"ctrl.tableBodyCells[0].classList\">\n                {$ ctrl.tableBodyCells[0].filter ? ctrl.tableBodyCells[0].filter(row[ctrl.tableBodyCells[0].key], ctrl.tableBodyCells[0].filterArg) : row[ctrl.tableBodyCells[0].key] $}\n              </td>\n              <td ng-class=\"ctrl.tableBodyCells[1].classList\">\n                {$ ctrl.tableBodyCells[1].filter ? ctrl.tableBodyCells[1].filter(row[ctrl.tableBodyCells[1].key], ctrl.tableBodyCells[1].filterArg) : row[ctrl.tableBodyCells[1].key] $}\n              </td>\n              <td ng-class=\"ctrl.tableBodyCells[2].classList\">\n                {$ ctrl.tableBodyCells[2].filter ? ctrl.tableBodyCells[2].filter(row[ctrl.tableBodyCells[2].key], ctrl.tableBodyCells[2].filterArg) : row[ctrl.tableBodyCells[2].key] $}\n              </td>\n              <td ng-class=\"ctrl.tableBodyCells[3].classList\">\n                {$ ctrl.tableBodyCells[3].filter ? ctrl.tableBodyCells[3].filter(ctrl.tableBodyCells[3].filterRawData ? row : row[ctrl.tableBodyCells[3].key], ctrl.tableBodyCells[3].filterArg) : row[ctrl.tableBodyCells[3].key] $}\n              </td>\n              <td ng-class=\"ctrl.tableBodyCells[4].classList\">\n                <span ng-if=\"model.newInstanceSpec.source_type.type === \'volume\' && row.availability_zone !== model.newInstanceSpec.availability_zone\"\n                      class=\"invalid fa fa-exclamation-triangle\"\n                      popover=\"{$ ::trCtrl.helpText.volumeAZHelpText $}\"\n                      popover-trigger=\"mouseenter mouseleave\"\n                      popover-append-to-body=\"true\"\n                      popover-placement=\"top\"></span>\n                {$ ctrl.tableBodyCells[4].filter ? ctrl.tableBodyCells[4].filter(row[ctrl.tableBodyCells[4].key], ctrl.tableBodyCells[4].filterArg) : row[ctrl.tableBodyCells[4].key] $}\n              </td>\n              <td class=\"actions_column\">\n                <action-list>\n                  <action action-classes=\"\'btn btn-default\'\"\n                          callback=\"trCtrl.allocate\"\n                          item=\"row\">\n                    <span class=\"fa fa-arrow-up\"></span>\n                  </action>\n                </action-list>\n              </td>\n            </tr>\n            <tr class=\"detail-row\"\n                ng-repeat-end\n                ng-include=\"ctrl.sourceDetails\"\n                ng-if=\"!trCtrl.allocatedIds[row.id]\">\n            </tr>\n          </tbody>\n        </table>\n      </hz-magic-search-context>\n    </available>\n  </transfer-table>\n  </div>\n  <div ng-if=\"model.allowedBootSources.length === 0\">\n    <div translate class=\"subtitle text-danger\">There are no allowed boot\n      sources. If you think this is wrong please contact your administrator.\n    </div>\n  </div>\n</div>\n");}]);