(function(){'use strict';angular.module('horizon.framework.widgets.magic-search').directive('stMagicSearch',stMagicSearch);stMagicSearch.$inject=['$timeout','horizon.framework.widgets.magic-search.events'];function stMagicSearch($timeout,magicSearchEvents){var directive={link:link,require:'stTable',restrict:'A',scope:true};return directive;function link(scope,element,attr,tableCtrl){scope.currentServerSearchParams={"magicSearchQuery":""};function setPredObj(predicates,predObj,input){var lastPred=predicates.pop();angular.forEach(predicates,function(pred){predObj=predObj[pred]={};});predObj[lastPred]=input;}
function setServerFacetSearch(scope,query){var currentServerSearchParams=angular.copy(scope.currentServerSearchParams);currentServerSearchParams.magicSearchQuery=query;checkAndEmit(scope,currentServerSearchParams);}
function setServerTextSearch(scope,text){var currentServerSearchParams=angular.copy(scope.currentServerSearchParams);currentServerSearchParams.queryString=text;checkAndEmit(scope,currentServerSearchParams);}
function checkAndEmit(scope,serverSearchParams){if(serverSearchParams!==scope.currentServerSearchParams){serverSearchParams.magicSearchQueryChanged=!angular.equals(scope.currentServerSearchParams.magicSearchQuery,serverSearchParams.magicSearchQuery);serverSearchParams.queryStringChanged=!angular.equals(scope.currentServerSearchParams.queryString,serverSearchParams.queryString);scope.currentServerSearchParams=serverSearchParams;if(serverSearchParams.queryStringChanged||serverSearchParams.magicSearchQueryChanged){scope.$emit(magicSearchEvents.SERVER_SEARCH_UPDATED,angular.copy(scope.currentServerSearchParams));}}}
var textSearchWatcher=scope.$on('textSearch-ms-context',function(event,text){$timeout(function(){if(scope.clientFullTextSearch){tableCtrl.search(text);}else{setServerTextSearch(scope,text);}});});var searchUpdatedWatcher=scope.$on('searchUpdated-ms-context',function(event,query){setServerFacetSearch(scope,query);tableCtrl.tableState().search={};query.split('&').forEach(function(x){$timeout(function(){var arr=x.split('=');var predString=arr[0];var predicates=predString.split('.');if(scope.filterFacets){var isServerFacet=scope.filterFacets.some(function checkIsServer(facet){return facet.name===predString&&facet.isServer;});if(isServerFacet){return;}}
if(predicates.length>1){var firstPred=predicates[0];var predicateObj={};setPredObj(predicates,predicateObj,arr[1]);tableCtrl.search(predicateObj[firstPred],firstPred);}else{tableCtrl.search(arr[1],predString);}});});});scope.$on('$destroy',function(){textSearchWatcher();searchUpdatedWatcher();});}}})();