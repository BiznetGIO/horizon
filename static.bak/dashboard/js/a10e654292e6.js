(function(){'use strict';angular.module('horizon.dashboard.identity.roles',['ngRoute','horizon.dashboard.identity.roles.actions']).constant('horizon.dashboard.identity.roles.resourceType','OS::Keystone::Role').run(run).config(config);run.$inject=['horizon.framework.conf.resource-type-registry.service','horizon.app.core.openstack-service-api.keystone','horizon.dashboard.identity.roles.resourceType'];function run(registry,keystone,roleResourceType){registry.getResourceType(roleResourceType).setNames(gettext('Role'),gettext('Roles')).setProperties(roleProperties()).setListFunction(listFunction).tableColumns.append({id:'name',priority:1,sortDefault:true}).append({id:'id',priority:1});function listFunction(){return keystone.getRoles().then(addTrackBy);}
function addTrackBy(response){return{data:{items:response.data.items.map(function(role){role.trackBy=[role.id,role.domain_id,role.name].join('/');return role;})}};}
function roleProperties(){return{name:{label:gettext('Name'),filters:['noName']},id:{label:gettext('ID'),filters:['noValue']}};}}
config.$inject=['$provide','$windowProvider','$routeProvider'];function config($provide,$windowProvider,$routeProvider){var path=$windowProvider.$get().STATIC_URL+'dashboard/identity/roles/';$provide.constant('horizon.dashboard.identity.roles.basePath',path);$routeProvider.when('/identity/roles',{templateUrl:path+'panel.html'});}})();