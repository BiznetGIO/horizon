(function(){'use strict';angular.module('horizon.app.core.images').factory('horizon.app.core.images.actions.create.service',createService);createService.$inject=['$q','horizon.app.core.images.events','horizon.app.core.images.resourceType','horizon.app.core.images.actions.createWorkflow','horizon.app.core.metadata.service','horizon.app.core.openstack-service-api.glance','horizon.app.core.openstack-service-api.policy','horizon.framework.util.actions.action-result.service','horizon.framework.widgets.modal.wizard-modal.service','horizon.framework.widgets.toast.service'];function createService($q,events,resourceType,createWorkflow,metadataService,glance,policy,actionResultService,wizardModalService,toast){var message={success:gettext('Image %s was successfully created.')};var model={};var scope;var service={initScope:initScope,perform:perform,allowed:allowed};return service;function initScope($scope){var watchImageChange=$scope.$on(events.IMAGE_CHANGED,onImageChange);var watchMetadataChange=$scope.$on(events.IMAGE_METADATA_CHANGED,onMetadataChange);scope=$scope;$scope.$on('$destroy',destroy);function destroy(){watchImageChange();watchMetadataChange();}}
function onImageChange(e,image){model.image=image;e.stopPropagation();}
function onMetadataChange(e,metadata){model.metadata=metadata;e.stopPropagation();}
function allowed(){return policy.ifAllowed({rules:[['image','add_image']]});}
function perform(){model.image={};model.metadata={};scope.image={};return wizardModalService.modal({scope:scope,workflow:createWorkflow,submit:submit}).result;}
function submit(){var finalModel=angular.extend({},model.image,model.metadata);if(finalModel.source_type==='url'){delete finalModel.data;}else{delete finalModel.image_url;}
function onProgress(progress){scope.$broadcast(events.IMAGE_UPLOAD_PROGRESS,progress);}
return glance.createImage(finalModel,onProgress).then(onCreateImage);}
function onCreateImage(response){var newImage=response.data;toast.add('success',interpolate(message.success,[newImage.name]));return actionResultService.getActionResult().created(resourceType,newImage.id).result;}}})();