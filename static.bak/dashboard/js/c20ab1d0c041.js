(function(){'use strict';angular.module('horizon.app.core.openstack-service-api').factory('horizon.app.core.openstack-service-api.cinder',cinderAPI);cinderAPI.$inject=['horizon.framework.util.http.service','horizon.framework.widgets.toast.service'];function cinderAPI(apiService,toastService){var service={getVolumes:getVolumes,getVolume:getVolume,getVolumeTypes:getVolumeTypes,getVolumeMetadata:getVolumeMetadata,getVolumeSnapshotMetadata:getVolumeSnapshotMetadata,getVolumeTypeMetadata:getVolumeTypeMetadata,getVolumeType:getVolumeType,getDefaultVolumeType:getDefaultVolumeType,getVolumeSnapshots:getVolumeSnapshots,getExtensions:getExtensions,getQoSSpecs:getQoSSpecs,createVolume:createVolume,getAbsoluteLimits:getAbsoluteLimits,getServices:getServices,getDefaultQuotaSets:getDefaultQuotaSets,setDefaultQuotaSets:setDefaultQuotaSets,updateProjectQuota:updateProjectQuota,editVolumeMetadata:editVolumeMetadata,editVolumeSnapshotMetadata:editVolumeSnapshotMetadata,editVolumeTypeMetadata:editVolumeTypeMetadata};return service;function getVolumes(params){var config=params?{'params':params}:{};return apiService.get('/api/cinder/volumes/',config).error(function(){toastService.add('error',gettext('Unable to retrieve the volumes.'));});}
function getVolume(id){return apiService.get('/api/cinder/volumes/'+id).error(function(){toastService.add('error',gettext('Unable to retrieve the volume.'));});}
function createVolume(newVolume){return apiService.post('/api/cinder/volumes/',newVolume).error(function(){toastService.add('error',gettext('Unable to create the volume.'));});}
function getVolumeTypes(){return apiService.get('/api/cinder/volumetypes/').error(function(){toastService.add('error',gettext('Unable to retrieve the volume types.'));});}
function getVolumeMetadata(id){return apiService.get('/api/cinder/volumes/'+id+'/metadata').error(function(){toastService.add('error',gettext('Unable to retrieve the volume metadata.'));});}
function getVolumeSnapshotMetadata(id){return apiService.get('/api/cinder/volumesnapshots/'+id+'/metadata').error(function(){toastService.add('error',gettext('Unable to retrieve the snapshot metadata.'));});}
function getVolumeTypeMetadata(id){return apiService.get('/api/cinder/volumetypes/'+id+'/metadata').error(function(){toastService.add('error',gettext('Unable to retrieve the volume type metadata.'));});}
function editVolumeMetadata(id,updated,removed){return apiService.patch('/api/cinder/volumes/'+id+'/metadata',{updated:updated,removed:removed}).error(function(){toastService.add('error',gettext('Unable to edit volume metadata.'));});}
function editVolumeSnapshotMetadata(id,updated,removed){return apiService.patch('/api/cinder/volumesnapshots/'+id+'/metadata',{updated:updated,removed:removed}).error(function(){toastService.add('error',gettext('Unable to edit snapshot metadata.'));});}
function editVolumeTypeMetadata(id,updated,removed){return apiService.patch('/api/cinder/volumetypes/'+id+'/metadata',{updated:updated,removed:removed}).error(function(){toastService.add('error',gettext('Unable to edit volume type metadata.'));});}
function getVolumeType(id){return apiService.get('/api/cinder/volumetypes/'+id).error(function(){toastService.add('error',gettext('Unable to retrieve the volume type.'));});}
function getDefaultVolumeType(){return apiService.get('/api/cinder/volumetypes/default').error(function(){toastService.add('error',gettext('Unable to retrieve the default volume type.'));});}
function getVolumeSnapshots(params){var config=params?{'params':params}:{};return apiService.get('/api/cinder/volumesnapshots/',config).error(function(){toastService.add('error',gettext('Unable to retrieve the volume snapshots.'));});}
function getExtensions(config){return apiService.get('/api/cinder/extensions/',config).error(function(){toastService.add('error',gettext('Unable to retrieve the extensions.'));});}
function getServices(){return apiService.get('/api/cinder/services/').error(function(){toastService.add('error',gettext('Unable to retrieve the cinder services.'));});}
function getQoSSpecs(params){var config=params?{'params':params}:{};return apiService.get('/api/cinder/qosspecs/',config).error(function(){toastService.add('error',gettext('Unable to retrieve the QoS Specs.'));});}
function getAbsoluteLimits(){return apiService.get('/api/cinder/tenantabsolutelimits/').error(function(){toastService.add('error',gettext('Unable to retrieve the Absolute Limits.'));});}
function getDefaultQuotaSets(){return apiService.get('/api/cinder/quota-sets/defaults/').error(function(){toastService.add('error',gettext('Unable to retrieve the default quotas.'));});}
function setDefaultQuotaSets(quotas){return apiService.patch('/api/cinder/quota-sets/defaults/',quotas).error(function(){toastService.add('error',gettext('Unable to set the default quotas.'));});}
function updateProjectQuota(quota,projectId){var url='/api/cinder/quota-sets/'+projectId;return apiService.patch(url,quota).error(function(){toastService.add('error',gettext('Unable to update project quota data.'));});}}}());